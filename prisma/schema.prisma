generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model aboutMe {
  id              String         @id @default(uuid())
  name            String
  title           String         @default("")
  bio             String         @default("")
  profileImage    String?
  techStack       String[]       @default([])
  currentActivities String[]     @default([])
  email           String?
  phone           String?
  address         String?
  skills          skills[]
  experiences     experiences[]
  educations      educations[]
  socialLinks     socialLinks[]
  retrospectives  retrospectives[]
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
}

model skills {
  id        String   @id @default(uuid())
  name      String
  level     Int?
  imageUrl  String?
  aboutMeId String
  aboutMe   aboutMe  @relation(fields: [aboutMeId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model experiences {
  id          String   @id @default(uuid())
  title       String
  company     String
  startDate   DateTime
  endDate     DateTime?
  description String?
  achievements String[] @default([])
  aboutMeId   String
  aboutMe     aboutMe  @relation(fields: [aboutMeId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model educations {
  id          String   @id @default(uuid())
  school      String
  degree      String
  fieldOfStudy String
  startDate   DateTime
  endDate     DateTime?
  grade       String?
  description String?
  aboutMeId   String
  aboutMe     aboutMe  @relation(fields: [aboutMeId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model socialLinks {
  id        String   @id @default(uuid())
  platform  String
  url       String
  icon      String?
  aboutMeId String
  aboutMe   aboutMe  @relation(fields: [aboutMeId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model retrospectives {
  id        String   @id @default(uuid())
  year      String
  title     String
  description String
  views     Int      @default(0)
  aboutMeId String
  aboutMe   aboutMe  @relation(fields: [aboutMeId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model projects {
  id          String   @id @default(uuid())
  name        String
  description String?
  thumbnail   String?
  notionLink  String?
  githubLink  String?
  liveLink    String?
  featured    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}