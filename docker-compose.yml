version: '3.8'

services:
  db:
    image: postgres:14-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 5

  nextjs:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - '3000:3000'
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - .:/usr/src/app
    command: sh ./entrypoint.sh

  prisma-studio:
    image: node:18-alpine
    restart: always
    ports:
      - '5555:5555'
    depends_on:
      db:
        condition: service_healthy
    working_dir: /usr/src/app
    volumes:
      - .:/usr/src/app
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public
    command: npx prisma studio --port 5555
    env_file:
      - .env

volumes:
  postgres_data: